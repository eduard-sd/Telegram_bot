const questionsAndAnswers = "–í–æ–ø—Ä–æ—Å—ã ‚ùì";
const cart = "–ö–æ—Ä–∑–∏–Ω–∞ üì¶";
const profile = "–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç üíº";
const goBack = "‚¨Ö –ù–∞–∑–∞–¥";
const balloons = "–®–∞—Ä—ã üéà";

//–∫–Ω–æ–ø–æ—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è "/start"
// "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
function keyboardDefault() {
    return {
        keyboard: [
            [{text: balloons}, {text: "–°–æ—Ü —Å–µ—Ç–∏ üë§"}]
        ],
        resize_keyboard: true,
        one_time_keyboard: true
    }
}
function sendVCard() {
    return {
        reply_markup: {
            resize_keyboard: true,
            one_time_keyboard: true,
            keyboard: [
                [{text: "–ú–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",request_contact: true}],
                [{text:"–û—Ç–º–µ–Ω–∞"}]
            ]
        }
    }
}



//–∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
//–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
//"–®–∞—Ä—ã üéà"
function balloonsKeyboard() {
    return {
        inline_keyboard: [
            [
                {text: "–ö–∞—Ç–∞–ª–æ–≥ –∏ —Ü–µ–Ω—ã üéÅ", callback_data: "–ö–∞—Ç–∞–ª–æ–≥ –∏ —Ü–µ–Ω—ã üéÅ"},
                {text: profile, callback_data: profile}
            ],
            [{text: goBack, callback_data: goBack}, {text: cart, callback_data: cart}]
        ]
    }
}

//"–ö–∞—Ç–∞–ª–æ–≥ –∏ —Ü–µ–Ω—ã"
function priceListKeyboard() {
    return {
        inline_keyboard: [
            [
                {text: "–í–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã",callback_data: "–í–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã"},
                {text: "–§–æ–ª—å–≥–∏-–Ω–Ω—ã–µ —à–∞—Ä—ã, —Ñ–∏–≥—É—Ä—ã",callback_data: "–§–æ–ª—å–≥–∏-–Ω–Ω—ã–µ —à–∞—Ä—ã, —Ñ–∏–≥—É—Ä—ã"}
            ],
            [
                {text: "–¶–µ–Ω–∞ –ø–æ —Ñ–æ—Ç–æ üì∏", callback_data: "–¶–µ–Ω–∞ –ø–æ —Ñ–æ—Ç–æ üì∏"}
            ],
            [{text: goBack, callback_data: goBack},{text: cart, callback_data: cart}]
        ]
    }
}

//"–í–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã"
function classicBalloonsKeyboard() {
    return {
        inline_keyboard: [
            [
                {text: "–ö—Ä—É–≥–ª—ã–µ —à–∞—Ä—ã",callback_data: "–ö—Ä—É–≥–ª—ã–µ —à–∞—Ä—ã"},
                {text: "–®–∞—Ä—ã –¥–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è",callback_data: "–®–∞—Ä—ã –¥–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è"}
            ],
            [
                {text: "–°–µ—Ä–¥—Ü–∞",callback_data: "–°–µ—Ä–¥—Ü–∞"},
                {text: "–ë–æ–ª—å—à–∏–µ —à–∞—Ä—ã",callback_data: "–ë–æ–ª—å—à–∏–µ —à–∞—Ä—ã"}
            ],
            [
                {text: "–°—Ñ–µ—Ä—ã –ë–∞–±–ª—Å",callback_data: "–°—Ñ–µ—Ä—ã –ë–∞–±–ª—Å"},
                {text: "–®–∞—Ä—ã —Å —Ä–∏—Å—É–Ω–∫–æ–º",callback_data: "–®–∞—Ä—ã —Å —Ä–∏—Å—É–Ω–∫–æ–º"}
            ],
            [{text: goBack, callback_data: goBack}, {text: cart, callback_data: cart}]
        ]
    }
}

//"–®–∞–±–ª–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏ –º–µ–Ω—é"
function classicCircleBalloonsKeyboard() {
    return {
        inline_keyboard: [
            [{text: goBack, callback_data: goBack}, {text: cart, callback_data: cart}]
        ]
    }
}

//"–§–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω—ã–µ —à–∞—Ä—ã, —Ñ–∏–≥—É—Ä—ã"
function foilBalloonsKeyboard() {
    return {
        inline_keyboard: [
            [
                {text: "–§–∏–≥—É—Ä—ã",callback_data: "–§–∏–≥—É—Ä—ã"},
                {text: "–¶–∏—Ñ—Ä—ã",callback_data: "–¶–∏—Ñ—Ä—ã"}
            ],
            [
                {text: "–§–æ–ª—å–≥–∞ —Å —Ä–∏—Å—É–Ω–∫–æ–º",callback_data: "–§–æ–ª—å–≥–∞ —Å —Ä–∏—Å—É–Ω–∫–æ–º"},
                {text: "–§–æ–ª—å–≥–∞ –±–µ–∑ —Ä–∏—Å—É–Ω–∫–∞",callback_data: "–§–æ–ª—å–≥–∞ –±–µ–∑ —Ä–∏—Å—É–Ω–∫–∞"}
            ],
            [
                {text: "–ë—É–∫–≤—ã",callback_data: "–ë—É–∫–≤—ã"},
                {text: "–•–æ–¥–∏–ª–∫–∏",callback_data: "–•–æ–¥–∏–ª–∫–∏"}
            ],
            [{text: goBack, callback_data: goBack}, {text: cart, callback_data: cart}]
        ]
    }
}


//"–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ñ–æ—Ç–æ"
function getPriceFromPhotoKeyboard() {
    return {
        inline_keyboard: [
            [{text: goBack, callback_data: goBack}, {text: cart, callback_data: cart}]
        ]
    }
}


//"–ö–æ—Ä–∑–∏–Ω–∞"
function cartKeyboard() {
    return {
        inline_keyboard: [
            [{text: goBack, callback_data: goBack},{text: "–û—Ñ–æ—Ä–º–∏—Ç—å ‚úÖ", callback_data: "–û—Ñ–æ—Ä–º–∏—Ç—å ‚úÖ"}]
        ]
    }
}

//"–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
function profileKeyboard() {
    return {
        inline_keyboard: [
            [
                {text: "–ú–æ–∏ –∑–∞–∫–∞–∑—ã üìã",callback_data: "–ú–æ–∏ –∑–∞–∫–∞–∑—ã üìã"},
                {text: "–±–æ–Ω—É—Å—ã –°–ø–∞—Å–∏–±–æ üí∞",callback_data: "–±–æ–Ω—É—Å—ã –°–ø–∞—Å–∏–±–æ üí∞"}
            ],
            [
                {text: questionsAndAnswers, callback_data: questionsAndAnswers}
            ],
            [{text: goBack, callback_data: goBack}, {text: cart, callback_data: cart}]
        ]
    }
}

//"–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã"
function faqKeyboard() {
    return {
        inline_keyboard: [
            [
                {text: "–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å?",callback_data: "–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å?"},
                {text: "–î–æ—Å—Ç–∞–≤–∫–∞ üöö",callback_data: "–î–æ—Å—Ç–∞–≤–∫–∞ üöö"}
            ],
            [
                {text: "–ê–¥—Ä–µ—Å–∞",callback_data: "–ê–¥—Ä–µ—Å–∞"},
                {text: "–ì–∞—Ä–∞–Ω—Ç–∏–∏ üëç",callback_data: "–ì–∞—Ä–∞–Ω—Ç–∏–∏ üëç"}
            ],
            [{text: goBack, callback_data: goBack},{text: cart, callback_data: cart}]
        ]
    }
}


//"–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
function addItemInCart() {
    return {
        inline_keyboard: [
            [
                {text: "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É ‚ûï",callback_data: "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É ‚ûï"}
            ],
            [{text: goBack, callback_data: goBack},{text: cart, callback_data: cart}]
        ]
    }
}
//"–í—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç"
function colorsList() {
    return {
        inline_keyboard: [
            [
                {text: "–í—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç üåà",callback_data: "–æ–ø—Ä–æ—Å.–≤—ã–±—Ä–∞—Ç—å-—Ü–≤–µ—Ç"}
            ],
            [{text: goBack, callback_data: goBack},{text: cart, callback_data: cart}]
        ]
    }
}
//–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–Ω–æ–ø–æ–∫ –ø–∞–ª–∏—Ç—Ä—ã —Ü–≤–µ—Ç–æ–≤ –∏–Ω–ª–∞–π–Ω
function colorsButtons (startNum, endNum) {
    let mainArray = {
        inline_keyboard: []
    };

    let start = startNum;
    let end = endNum + 1;
    let rows = Math.ceil((end - (start)) / 5);
    let x = 0;

    for (let i = 0; i < rows; i++) {
        let temp = [];

        if (i < rows-1) {
            for (let j = x + start; j < 5+x + start; j++) {
                temp.push({text: `${j}`,callback_data: "–æ–ø—Ä–æ—Å.—Ü–≤–µ—Ç."+`${j}`})

            }
            x += 5;
        } else {
            for (let j = x + start; j < end  ; j++) {
                temp.push({text: `${j}`,callback_data: "–æ–ø—Ä–æ—Å.—Ü–≤–µ—Ç."+`${j}`})
            }
        }
        mainArray.inline_keyboard.push(temp);
    }
    return mainArray
}

//–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–Ω–æ–ø–æ–∫ –ø–∞–ª–∏—Ç—Ä—ã —Ü–≤–µ—Ç–æ–≤ –∏–Ω–ª–∞–π–Ω
function colorsButtonsDefaultKeyboard (startNum, endNum) {
    let mainArray = {
        keyboard: [],
        resize_keyboard: true,
        one_time_keyboard: true
    };

    let start = startNum;
    let end = endNum + 1;
    let rows = Math.ceil((end - (start)) / 8);
    let x = 0;

    for (let i = 0; i < rows; i++) {
        let temp = [];

        if (i < rows-1) {
            for (let j = x + start; j < 8+x + start; j++) {
                temp.push({text: `${j}`,callback_data: "–æ–ø—Ä–æ—Å.—Ü–≤–µ—Ç."+`${j}`})

            }
            x += 8;
        } else {
            for (let j = x + start; j < end  ; j++) {
                temp.push({text: `${j}`,callback_data: "–æ–ø—Ä–æ—Å.—Ü–≤–µ—Ç."+`${j}`})
            }
        }
        mainArray.keyboard.push(temp);
    }
    return mainArray
}

//"–¶–≤–µ—Ç–∞ –∞–≥–∞—Ç"
function agatColorsKeyboard() {
    // return colorsButtons (1,10);
    return colorsButtonsDefaultKeyboard (1,10);
}
//"–¶–≤–µ—Ç–∞ —Ö—Ä–æ–º"
function chromColorsKeyboard() {
    // return colorsButtons (11,16);
    return colorsButtonsDefaultKeyboard (11,16);
}
//"–¶–≤–µ—Ç–∞ –º–µ—Ç–∞–ª–∏–∫"
function metalicColorsKeyboard() {
    // return colorsButtons (17,43);
    return colorsButtonsDefaultKeyboard (17,43);
}
//"–¶–≤–µ—Ç–∞ –ø–∞—Å—Ç–µ–ª—å (–ø–ª—é—Å —Ñ–æ–ª—å–≥–∞)"
function pastelColorsKeyboard() {
    // return colorsButtons (44,75);
    return colorsButtonsDefaultKeyboard (44,75);
}


module.exports.keyboardDefault = keyboardDefault;
module.exports.sendVCard = sendVCard;
module.exports.keyboardBalloons = balloonsKeyboard;
module.exports.priceListKeyboard = priceListKeyboard;
module.exports.classicBalloonsKeyboard = classicBalloonsKeyboard;
module.exports.classicCircleBalloonsKeyboard = classicCircleBalloonsKeyboard;
module.exports.foilBalloonsKeyboard = foilBalloonsKeyboard;
module.exports.getPriceFromPhotoKeyboard = getPriceFromPhotoKeyboard;
module.exports.faqKeyboard = faqKeyboard;
module.exports.cartKeyboard = cartKeyboard;
module.exports.profileKeyboard = profileKeyboard;
module.exports.addItemInCart = addItemInCart;
module.exports.colorsList = colorsList;
module.exports.agatColorsKeyboard = agatColorsKeyboard;
module.exports.chromColorsKeyboard = chromColorsKeyboard;
module.exports.metalicColorsKeyboard = metalicColorsKeyboard;
module.exports.pastelColorsKeyboard = pastelColorsKeyboard;

