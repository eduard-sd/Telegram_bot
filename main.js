const TelegramBot = require('node-telegram-bot-api');
const TOKEN = "869793649:AAGBDwsYi_yCpSQ5V7_qvaTUx08pVkOn2GQ";
const bot = new TelegramBot(TOKEN, {polling: true});
const keyboard = require('./keyboard/inlineKeyboard');
const pool = require('./connectDB').pgPool;
const cTable = require('console.table');

const keyboardDefault = keyboard.keyboardDefault();
const sendVCard = keyboard.sendVCard();
const keyboardBalloons = keyboard.keyboardBalloons();
const priceListKeyboard = keyboard.priceListKeyboard();
const classicBallonsKeyboard = keyboard.classicBallonsKeyboard();
const classicCircleBallonsKeyboard = keyboard.classicCircleBallonsKeyboard();
const foilBallonsKeyboard = keyboard.foilBallonsKeyboard();
const getPriceFromPhotoKeyboard = keyboard.getPriceFromPhotoKeyboard();
const faqKeyboard = keyboard.faqKeyboard();
const cartKeyboard = keyboard.cartKeyboard();
const profileKeyboard = keyboard.profileKeyboard();

let photoList = [];
const adminChatID = '1875888';
let previousMenu = '–®–∞—Ä—ã üéà';


//–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
function addBackButton(previousMenu, customKeyboard) {
    let customKeyboardArray = customKeyboard.inline_keyboard;
    for (let i = 0; i < customKeyboardArray.length; i++) {
        if (i === customKeyboardArray.length - 1) {
            if (customKeyboardArray[i][0].text !== "‚¨Ö –ù–∞–∑–∞–¥") {
                customKeyboardArray[i].splice(0, 0, {text: "‚¨Ö –ù–∞–∑–∞–¥", callback_data: previousMenu})
            }
        }
    }
    return {inline_keyboard: customKeyboardArray};
}

bot.on('text', (msg) => {
    const chatValue = msg.chat;
    const chatId = msg.chat.id;
    const chatOpponent = chatValue.first_name ? chatValue.first_name : "–î–æ—Ä–æ–≥–æ–π –∫–ª–∏–µ–Ω—Ç" ;

    console.log(chatOpponent);

    if (msg.text.toString() === "/start") {
        bot.sendMessage(
            chatId,
            `${chatOpponent}, –¥–æ–±—Ä—ã–π –¥–µ–Ω—å! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ–∫—Å–∫–∏–π –ø–æ–º–æ—à–Ω–∏–∫ –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤. –ü—Ä–æ—à—É —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,
            {reply_markup: keyboardDefault}
        )
    }

    if (msg.text.toString() === "–®–∞—Ä—ã üéà") {
        // bot.sendPhoto(chatId, "https://avatars.mds.yandex.net/get-pdb/1681173/b1c1cbe3-c6ef-4662-af9e-fe3db83d1ec8/s1200");
        bot.sendMessage(
            chatId,
            '<a href="https://res.cloudinary.com/sharolandiya/image/upload/v1571498410/TelegramBotSharoladya/sharolandiay_noxiev.png">–®–∞—Ä–æ–ª–∞–Ω–¥–∏—è</a>'+`\n${chatOpponent}, –≤—ã –Ω–∞–∂–∞–ª–∏ —à–∞—Ä—ã –≤–≤–æ–¥–Ω–∞—è –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Å–ª—É–≥–∞–º`,
            {
                reply_markup: addBackButton(previousMenu, keyboardBalloons),
                parse_mode: "HTML"
            }
        );
        previousMenu = "–®–∞—Ä—ã üéà";

    } else if (msg.text.toString() === "–¢–æ—Ä—Ç—ã üéÇ") {

    } else if (msg.text.toString() === "–û—Ç–º–µ–Ω–∞") {
        bot.sendMessage(
            chatId,
            `${chatOpponent}, –≤—ã –Ω–∞–∂–∞–ª–∏ "–æ—Ç–º–µ–Ω–∞"`,
            {reply_markup: addBackButton(previousMenu, keyboardBalloons)}
        );
    }
});

bot.on('contact', (msg) => {
    console.log(msg);
    const chatId = msg.chat.id;
    const fromName = msg.from.first_name;
    const fromLastName = msg.from.last_name;
    const fromUsername = msg.from.username;
    const fromContact = msg.contact.phone_number;

    bot.sendMessage(
        chatId,
        `${fromName}, –ø—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ —Ä–∞—Å—á–µ—Ç—É...`,
        {reply_markup: addBackButton(previousMenu, keyboardBalloons)}
    );


    bot.sendMessage(
        adminChatID,
        "<b>–ë–æ—Å—Å —É –Ω–∞—Å –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç!</b> \n–ü—Ä–æ—Å–∏—Ç —Å–æ—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ñ–æ—Ç–æ." + `\n\n<b>–§–ò–û:</b> ${fromName} ${fromLastName} \n<b>–ù–∏–∫ —Ç–µ–ª–µ–≥—Ä–∞–º–º:</b> ${fromUsername} \n<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${fromContact}`,
        {parse_mode: 'HTML'},
    );
});



bot.on("callback_query", (msg) => {

    // console.log(msg);
    const chatValue = msg.message.chat;
    const chatId = chatValue.id;
    const chatOpponent = chatValue.first_name ? chatValue.first_name : "–î–æ—Ä–æ–≥–æ–π –∫–ª–∏–µ–Ω—Ç" ;
    const messageId = msg.message.message_id;


    // bot.sendMessage(chatId,
    //     `${msg.data} -------- callbackquery –∫–Ω–æ–ø–∫–∞`,
    //     {reply_markup: {}});


    if (msg.data.toString() === "–®–∞—Ä—ã üéà") {
        bot.editMessageText(
            '<a href="https://res.cloudinary.com/sharolandiya/image/upload/v1571498410/TelegramBotSharoladya/sharolandiay_noxiev.png">–®–∞—Ä–æ–ª–∞–Ω–¥–∏—è</a>'+`\n${chatOpponent}, –≤—ã –Ω–∞–∂–∞–ª–∏ —à–∞—Ä—ã –≤–≤–æ–¥–Ω–∞—è –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Å–ª—É–≥–∞–º`,
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, keyboardBalloons),
                parse_mode: "HTML"
            });
        previousMenu = "–®–∞—Ä—ã üéà";

    } else if (msg.data.toString() === "–ö–∞—Ç–∞–ª–æ–≥ –∏ —Ü–µ–Ω—ã üéÅ") {
        bot.editMessageText(
            '<a href="https://res.cloudinary.com/sharolandiya/image/upload/v1571502686/TelegramBotSharoladya/catalog_ktpfa6.png">–ö–∞—Ç–∞–ª–æ–≥ –∏ —Ü–µ–Ω—ã üéÅ</a>'+`${chatOpponent}, –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ –∏ —Ü–µ–Ω—ã`,
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, priceListKeyboard),
                parse_mode: "HTML"
            });
        previousMenu = "–ö–∞—Ç–∞–ª–æ–≥ –∏ —Ü–µ–Ω—ã üéÅ";

    } else if (msg.data.toString() === "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ñ–æ—Ç–æ üñºÔ∏è") {
        bot.editMessageText(
            `${chatOpponent}` + ', –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏, –∏ –Ω–∞–∂–º–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. \n\n–° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏ –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏. \n\n–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç–≤–µ—Ç–∞ 30 –º–∏–Ω—É—Ç.',
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, getPriceFromPhotoKeyboard)
            })
            .then(() => {
                bot.on('photo', (msg) => {
                    const photoObjectList = msg.photo;
                    console.log('list',msg.photo)
                    if (photoObjectList) {
                        // let lowQualityPhotoFileId = photoObjectList[0].file_id;
                        // let middleQualityPhotoFileId = photoObjectList[1].file_id;
                        photoList.length >= 2 ? photoList.push(photoObjectList[1].file_id) : photoList.push(photoObjectList[0].file_id);
                    }

                    if (photoList.length === 1) {
                        bot.sendMessage(
                            msg.chat.id,
                            "–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?",
                            sendVCard)
                    }
                });
                setTimeout(
                    () => {
                        for (let i = 0; i < photoList.length; i++) {
                            let fileId = photoList[i];
                            bot.sendPhoto(adminChatID, fileId);
                        }
                        photoList = [];
                    },
                    60000
                );
            });
        previousMenu = "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ñ–æ—Ç–æ üñºÔ∏è";

    } else if (msg.data.toString() === "–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã ‚ùì") {
        bot.editMessageText(
            '–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã',
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, faqKeyboard)
            });
        previousMenu = "–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã ‚ùì";

    } else if (msg.data.toString() === "–ö–æ—Ä–∑–∏–Ω–∞ üì¶") {
        let items = false;
        if (items) {
            bot.editMessageText(
                '–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:',
                {
                    chat_id: chatId,
                    message_id: messageId,
                    reply_markup: addBackButton(previousMenu, cartKeyboard)
                });
        } else {
            bot.editMessageText(
                '–í–∞—à–∞ –∫–æ–∑–∏–Ω–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞',
                {
                    chat_id: chatId,
                    message_id: messageId,
                    reply_markup: addBackButton(previousMenu, cartKeyboard)
                });
        }
        previousMenu = "–ö–æ—Ä–∑–∏–Ω–∞ üì¶";

    } else if (msg.data.toString() === "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç üíº") {
        bot.editMessageText(
            `–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç`,
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, profileKeyboard)
            });
        previousMenu = "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç üíº";

    } else if (msg.data.toString() === "–í–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã") {
        bot.editMessageText(
            '<a href="https://res.cloudinary.com/sharolandiya/image/upload/v1571502015/TelegramBotSharoladya/classic_exqdvy.png">–í–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã</a>'+`\n${chatOpponent}, –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤`,
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, classicBallonsKeyboard),
                parse_mode: "HTML"
            });
        previousMenu = "–í–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã";

    } else if (msg.data.toString() === "–§–æ–ª—å–≥–∏-–Ω–Ω—ã–µ —à–∞—Ä—ã, —Ñ–∏–≥—É—Ä—ã") {
        bot.editMessageText(
            '<a href="https://res.cloudinary.com/sharolandiya/image/upload/v1571501721/TelegramBotSharoladya/foil_rhy8vw.png">–§–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞—Ä—ã, —Ñ–∏–≥—É—Ä—ã</a>'+`\n${chatOpponent}, –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ —Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —à–∞—Ä–æ–≤`,
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, foilBallonsKeyboard),
                parse_mode: "HTML"
            });

        previousMenu = "–§–æ–ª—å–≥–∏-–Ω–Ω—ã–µ —à–∞—Ä—ã, —Ñ–∏–≥—É—Ä—ã";

    } else if (msg.data.toString() === "–ö—Ä—É–≥–ª—ã–µ —à–∞—Ä—ã") {
        const classicLatexNormalFilter = "SELECT * FROM telegramdb.balloonprice WHERE  material  IN ('–ª–∞—Ç–µ–∫—Å') and `form-factor` IN ('–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π') and `size-inches` IN ('10','12','14','16','18') ORDER BY id_balloon";
        let table = dataBsaeQuery(classicLatexNormalFilter);
        bot.editMessageText(
            '<a href="https://res.cloudinary.com/sharolandiya/image/upload/v1571502015/TelegramBotSharoladya/classic_exqdvy.png">–ö—Ä—É–≥–ª—ã–µ —à–∞—Ä—ã</a>' + `\n${chatOpponent}, –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤ ${table}`,
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: addBackButton(previousMenu, classicCircleBallonsKeyboard),
                parse_mode: "HTML"
            });
        previousMenu = "–ö—Ä—É–≥–ª—ã–µ —à–∞—Ä—ã";
    }
});

bot.on("polling_error", (err) => console.log(err));


// const sql = `SELECT * FROM telegramdb.balloonprice`;
// const foilBalloons = "SELECT * FROM telegramdb.balloonprice WHERE  material  IN ('–ª–∞—Ç–µ–∫—Å','–±–∞–±–ª—Å') ORDER BY id_balloon";
// const airBalloons = "SELECT * FROM telegramdb.balloonprice WHERE  material  IN ('—Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ') ORDER BY id_balloon";
// const sql2 = `SELECT NOW()`;//date

function dataBsaeQuery(selector){
    pool.query(selector, (err, res) => {
        if(err) {
            throw err;
        }
        // console.log({ res });
        // console.table(res.fields);
        // console.table(res.rows);
        // pool.end();
        return res;
    });
}